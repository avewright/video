# Qwen2.5-VL 3B QLoRA Configuration for Pure Vision-based Invoice Data Extraction
# Optimized for single GPU with 18GB+ VRAM

model:
  name: "Qwen/Qwen2.5-VL-3B-Instruct"
  model_max_length: 2048
  trust_remote_code: true
  torch_dtype: "bfloat16"
  
  # QLoRA configuration
  use_qlora: true
  load_in_4bit: true
  bnb_4bit_compute_dtype: "bfloat16"
  bnb_4bit_use_double_quant: true
  bnb_4bit_quant_type: "nf4"
  
  # LoRA parameters
  lora_config:
    r: 8
    lora_alpha: 16
    lora_dropout: 0.05
    bias: "none"
    task_type: "CAUSAL_LM"
    target_modules: 
      - "q_proj"
      - "v_proj"
      - "k_proj"
      - "o_proj"
      - "gate_proj"
      - "up_proj"
      - "down_proj"

training:
  output_dir: "./outputs/qwen25-3b-qlora-invoice"
  overwrite_output_dir: true
  
  # Batch and accumulation settings
  per_device_train_batch_size: 1
  per_device_eval_batch_size: 1
  gradient_accumulation_steps: 8
  dataloader_num_workers: 0
  
  # Learning rate and scheduling
  learning_rate: 2.0e-4
  lr_scheduler_type: "cosine"
  warmup_ratio: 0.03
  warmup_steps: 100
  
  # Training duration
  num_train_epochs: 3
  max_steps: -1  # Set to positive number to override epochs
  
  # Evaluation and saving
  evaluation_strategy: "steps"
  eval_steps: 500
  save_strategy: "steps"
  save_steps: 500
  save_total_limit: 3
  load_best_model_at_end: true
  metric_for_best_model: "eval_loss"
  greater_is_better: false
  
  # Optimization settings
  optim: "adamw_torch"
  weight_decay: 0.01
  adam_beta1: 0.9
  adam_beta2: 0.999
  adam_epsilon: 1.0e-8
  max_grad_norm: 1.0
  
  # Memory optimization
  gradient_checkpointing: true
  bf16: true
  fp16: false
  remove_unused_columns: false
  
  # Logging
  logging_strategy: "steps"
  logging_steps: 5  # More frequent logging for detailed loss tracking
  report_to: ["tensorboard"]
  
  # DeepSpeed ZeRO-2 for QLoRA (disabled for single GPU)
  # deepspeed: "configs/deepspeed_zero2.json"

dataset:
  name: "mychen76/invoices-and-receipts_ocr_v1"
  train_split: "train"
  validation_split: "valid"
  test_split: "test"
  
  # Data preprocessing
  preprocessing:
    max_image_size: 1280
    min_image_size: 224
    image_mean: [0.485, 0.456, 0.406]
    image_std: [0.229, 0.224, 0.225]
    
  # Instruction formatting
  instruction_template: |
    You are an expert at extracting structured data from receipts and invoices. 
    Analyze the image and return in JSON format all metadata seen including company details, items, prices, totals, and dates.
    
    Expected JSON format:
    {{
      "company": "Company Name",
      "address": "Full Address", 
      "date": "YYYY-MM-DD",
      "total": "XX.XX",
      "tax": "XX.XX",
      "items": [
        {{
          "description": "Item description",
          "quantity": "X",
          "price": "XX.XX",
          "total": "XX.XX"
        }}
      ]
    }}
    
    JSON Output:

# Computational settings
device: "cuda"
mixed_precision: "bf16"
gradient_checkpointing: true

# Reproducibility
seed: 42
data_seed: 42 